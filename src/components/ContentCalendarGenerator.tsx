import React, { useState } from 'react';
import { CalendarDays, Loader2, Lock, Copy, Download, Calendar, Hash } from 'lucide-react';
import { generateContentCalendar } from '../services/moreFeatures';
import { ContentCalendarGenerator as ContentCalendarGeneratorType } from '../types/moreFeatures';

interface ContentCalendarGeneratorProps {
  onUpgradeClick: () => void;
  hasUsedFreeTrial: boolean;
}

const ContentCalendarGenerator: React.FC<ContentCalendarGeneratorProps> = ({ onUpgradeClick, hasUsedFreeTrial }) => {
  const [niche, setNiche] = useState('');
  const [goal, setGoal] = useState('');
  const [platform, setPlatform] = useState('');
  const [isGenerating, setIsGenerating] = useState(false);
  const [calendar, setCalendar] = useState<ContentCalendarGeneratorType | null>(null);

  const goals = [
    'Brand Awareness', 'Lead Generation', 'Sales Conversion', 'Community Building',
    'Thought Leadership', 'Customer Retention', 'Product Education', 'Audience Growth'
  ];

  const platforms = [
    'Instagram', 'TikTok', 'YouTube', 'Twitter/X', 'LinkedIn', 'Facebook', 'Pinterest', 'Email'
  ];

  const handleGenerate = async () => {
    if (!niche.trim() || !goal.trim() || !platform.trim()) return;
    
    if (hasUsedFreeTrial) {
      onUpgradeClick();
      return;
    }

    setIsGenerating(true);
    try {
      const result = await generateContentCalendar(niche, goal, platform);
      setCalendar(result);
    } catch (error) {
      console.error('Error generating content calendar:', error);
    } finally {
      setIsGenerating(false);
    }
  };

  const handleCopy = (text: string) => {
    navigator.clipboard.writeText(text);
  };

  const handleDownload = () => {
    if (!calendar) return;

    let content = `
100-YEAR CONTENT CALENDAR FOR ${calendar.niche.toUpperCase()}
==========================================================
Generated: ${new Date().toLocaleDateString()}
Platform: ${calendar.platform}
Goal: ${calendar.goal}

PERENNIAL TOPICS (365 Evergreen Ideas)
-------------------------------------
${calendar.contentLibrary.perennialTopics.slice(0, 50).map((topic, i) => `${i + 1}. ${topic}`).join('\n')}
... and ${calendar.contentLibrary.perennialTopics.length - 50} more topics

WEEKLY THEMES
------------
${calendar.contentLibrary.weeklyThemes.map((week, i) => 
  `Week ${i + 1}: ${week.theme}\nCategories: ${week.postCategories.join(', ')}`
).join('\n\n')}

MONTHLY CAMPAIGNS
---------------
${calendar.contentLibrary.monthlyCampaigns.map((month) => 
  `${month.month}: ${month.campaign}\nContent: ${month.content.join(', ')}`
).join('\n\n')}

ANCHOR CONTENT PIECES
-------------------
${calendar.contentLibrary.anchorContent.map((piece, i) => `${i + 1}. ${piece}`).join('\n')}

SEASONAL IDEAS
------------
${calendar.contentLibrary.seasonalIdeas.map((season) => 
  `${season.season}:\n${season.ideas.map((idea, i) => `  ${i + 1}. ${idea}`).join('\n')}`
).join('\n\n')}

---
Generated by NexusAI
    `;

    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `content-calendar-${niche.replace(/\s+/g, '-').toLowerCase()}-${Date.now()}.txt`;
    a.click();
    URL.revokeObjectURL(url);
  };

  return (
    <section className="px-6 py-12">
      <div className="max-w-6xl mx-auto">
        <div className="text-center mb-8">
          <h2 className="text-3xl font-bold text-white mb-4">
            100-Year Content Calendar Generator
          </h2>
          <p className="text-gray-400">
            Generate an evergreen content library for your brand or niche—for the next century
          </p>
        </div>

        {!calendar ? (
          <div className="max-w-2xl mx-auto">
            <div className="bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-8">
              <div className="space-y-4">
                <div>
                  <label className="text-white font-medium mb-2 block">Your Niche</label>
                  <input
                    type="text"
                    value={niche}
                    onChange={(e) => setNiche(e.target.value)}
                    placeholder="e.g., fitness coaching, digital marketing, sustainable fashion..."
                    className="w-full bg-gray-900/50 border border-gray-600 rounded-lg px-4 py-3 text-white 
                             placeholder-gray-400 focus:border-yellow-400 focus:outline-none"
                  />
                </div>

                <div>
                  <label className="text-white font-medium mb-2 block">Content Goal</label>
                  <select
                    value={goal}
                    onChange={(e) => setGoal(e.target.value)}
                    className="w-full bg-gray-900/50 border border-gray-600 rounded-lg px-4 py-3 text-white 
                             focus:border-yellow-400 focus:outline-none"
                  >
                    <option value="">Select Content Goal</option>
                    {goals.map((g) => (
                      <option key={g} value={g}>{g}</option>
                    ))}
                  </select>
                </div>

                <div>
                  <label className="text-white font-medium mb-2 block">Primary Platform</label>
                  <select
                    value={platform}
                    onChange={(e) => setPlatform(e.target.value)}
                    className="w-full bg-gray-900/50 border border-gray-600 rounded-lg px-4 py-3 text-white 
                             focus:border-yellow-400 focus:outline-none"
                  >
                    <option value="">Select Platform</option>
                    {platforms.map((p) => (
                      <option key={p} value={p}>{p}</option>
                    ))}
                  </select>
                </div>
              </div>
              
              <button
                onClick={handleGenerate}
                disabled={isGenerating || !niche.trim() || !goal.trim() || !platform.trim()}
                className="w-full mt-6 px-6 py-4 bg-gradient-to-r from-yellow-400 to-amber-500 text-black 
                         font-bold rounded-lg hover:from-yellow-300 hover:to-amber-400 transition-all duration-300 
                         shadow-lg shadow-yellow-400/25 hover:shadow-yellow-400/40 disabled:opacity-50 
                         disabled:cursor-not-allowed flex items-center justify-center space-x-2"
              >
                {isGenerating ? (
                  <>
                    <Loader2 className="w-5 h-5 animate-spin" />
                    <span>Generating Content Calendar...</span>
                  </>
                ) : hasUsedFreeTrial ? (
                  <>
                    <Lock className="w-5 h-5" />
                    <span>Unlock Content Calendar - $9.99/mo</span>
                  </>
                ) : (
                  <>
                    <CalendarDays className="w-5 h-5" />
                    <span>Generate 100-Year Calendar</span>
                  </>
                )}
              </button>
              
              {!hasUsedFreeTrial && (
                <p className="text-center text-gray-400 text-sm mt-3">
                  ✨ Free trial • No credit card required
                </p>
              )}
            </div>
          </div>
        ) : (
          <div className="space-y-8 animate-fade-in">
            {/* Header with Download */}
            <div className="text-center bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-6">
              <h3 className="text-2xl font-bold text-white mb-4">
                📅 Content Calendar for {calendar.niche}
              </h3>
              <p className="text-gray-400 mb-4">Platform: {calendar.platform} • Goal: {calendar.goal}</p>
              <button
                onClick={handleDownload}
                className="px-6 py-3 bg-gradient-to-r from-yellow-400 to-amber-500 text-black font-semibold 
                         rounded-lg hover:from-yellow-300 hover:to-amber-400 transition-all duration-300 
                         flex items-center space-x-2 mx-auto"
              >
                <Download className="w-4 h-4" />
                <span>Download Complete Calendar</span>
              </button>
            </div>

            {/* Perennial Topics */}
            <div className="bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-6">
              <div className="flex justify-between items-start mb-4">
                <div className="flex items-center space-x-3">
                  <Calendar className="w-6 h-6 text-green-400" />
                  <h4 className="text-green-400 font-bold text-lg">Evergreen Content Topics</h4>
                </div>
                <button
                  onClick={() => handleCopy(calendar.contentLibrary.perennialTopics.join('\n'))}
                  className="p-2 text-gray-400 hover:text-white transition-colors"
                >
                  <Copy className="w-4 h-4" />
                </button>
              </div>
              <div className="grid md:grid-cols-3 gap-4 max-h-96 overflow-y-auto">
                {calendar.contentLibrary.perennialTopics.slice(0, 30).map((topic, index) => (
                  <div key={index} className="bg-gray-900/50 rounded-lg p-3">
                    <p className="text-gray-300 text-sm">{topic}</p>
                  </div>
                ))}
              </div>
              <p className="text-gray-500 text-sm text-center mt-4">
                Showing 30 of {calendar.contentLibrary.perennialTopics.length} topics. Download to see all.
              </p>
            </div>

            {/* Weekly Themes */}
            <div className="bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-6">
              <h4 className="text-yellow-400 font-bold text-lg mb-4">📊 Weekly Themes & Categories</h4>
              <div className="grid md:grid-cols-2 gap-6">
                {calendar.contentLibrary.weeklyThemes.slice(0, 4).map((week, index) => (
                  <div key={index} className="bg-gray-900/50 rounded-lg p-4">
                    <h5 className="text-white font-semibold mb-2">Theme: {week.theme}</h5>
                    <div className="flex flex-wrap gap-2">
                      {week.postCategories.map((category, i) => (
                        <span key={i} className="bg-yellow-400/20 text-yellow-400 px-2 py-1 rounded-full text-xs">
                          {category}
                        </span>
                      ))}
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* Monthly Campaigns */}
            <div className="bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-6">
              <h4 className="text-blue-400 font-bold text-lg mb-4">🗓️ Monthly Campaign Ideas</h4>
              <div className="grid md:grid-cols-3 gap-4">
                {calendar.contentLibrary.monthlyCampaigns.slice(0, 6).map((month, index) => (
                  <div key={index} className="bg-gray-900/50 rounded-lg p-4">
                    <h5 className="text-white font-semibold mb-2">{month.month}: {month.campaign}</h5>
                    <ul className="space-y-1">
                      {month.content.slice(0, 3).map((content, i) => (
                        <li key={i} className="text-gray-300 text-sm flex items-start space-x-2">
                          <div className="w-2 h-2 bg-blue-400 rounded-full mt-2 flex-shrink-0"></div>
                          <span>{content}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                ))}
              </div>
            </div>

            {/* Anchor Content */}
            <div className="bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-6">
              <div className="flex justify-between items-start mb-4">
                <div className="flex items-center space-x-3">
                  <Hash className="w-6 h-6 text-purple-400" />
                  <h4 className="text-purple-400 font-bold text-lg">Lifetime Anchor Content</h4>
                </div>
                <button
                  onClick={() => handleCopy(calendar.contentLibrary.anchorContent.join('\n'))}
                  className="p-2 text-gray-400 hover:text-white transition-colors"
                >
                  <Copy className="w-4 h-4" />
                </button>
              </div>
              <div className="space-y-3">
                {calendar.contentLibrary.anchorContent.map((content, index) => (
                  <div key={index} className="bg-purple-500/10 border border-purple-500/20 rounded-lg p-3">
                    <p className="text-gray-300 text-sm">{content}</p>
                  </div>
                ))}
              </div>
            </div>

            {/* Seasonal Ideas */}
            <div className="bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-6">
              <h4 className="text-red-400 font-bold text-lg mb-4">🎭 Seasonal & Holiday Content</h4>
              <div className="grid md:grid-cols-2 gap-6">
                {calendar.contentLibrary.seasonalIdeas.map((season, index) => (
                  <div key={index} className="bg-gray-900/50 rounded-lg p-4">
                    <h5 className="text-white font-semibold mb-2">{season.season}</h5>
                    <ul className="space-y-1">
                      {season.ideas.slice(0, 5).map((idea, i) => (
                        <li key={i} className="text-gray-300 text-sm flex items-start space-x-2">
                          <div className="w-2 h-2 bg-red-400 rounded-full mt-2 flex-shrink-0"></div>
                          <span>{idea}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                ))}
              </div>
            </div>

            {/* Content Strategy */}
            <div className="bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-6">
              <h4 className="text-yellow-400 font-bold text-lg mb-4">📋 Content Strategy Guide</h4>
              <div className="grid md:grid-cols-3 gap-6">
                <div>
                  <h5 className="text-white font-semibold mb-3">Daily Content</h5>
                  <ul className="text-gray-300 text-sm space-y-2">
                    <li>• Use perennial topics for daily posts</li>
                    <li>• Rotate through different categories</li>
                    <li>• Repurpose across platforms</li>
                    <li>• Track engagement to identify winners</li>
                    <li>• Batch create content weekly</li>
                  </ul>
                </div>
                <div>
                  <h5 className="text-white font-semibold mb-3">Weekly & Monthly</h5>
                  <ul className="text-gray-300 text-sm space-y-2">
                    <li>• Follow weekly themes for consistency</li>
                    <li>• Plan monthly campaigns in advance</li>
                    <li>• Create content series that build</li>
                    <li>• Use campaigns for product launches</li>
                    <li>• Analyze performance monthly</li>
                  </ul>
                </div>
                <div>
                  <h5 className="text-white font-semibold mb-3">Long-Term Strategy</h5>
                  <ul className="text-gray-300 text-sm space-y-2">
                    <li>• Develop anchor content quarterly</li>
                    <li>• Update seasonal content yearly</li>
                    <li>• Build content library systematically</li>
                    <li>• Repurpose top performers annually</li>
                    <li>• Evolve themes based on trends</li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </section>
  );
};

export default ContentCalendarGenerator;