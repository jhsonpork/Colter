import React, { useState } from 'react';
import { GraduationCap, Loader2, Lock, Copy, Download, BookOpen, FileText, Video } from 'lucide-react';
import { buildCourseCurriculum } from '../services/moreFeatures';
import { CourseCurriculumBuilder as CourseCurriculumBuilderType } from '../types/moreFeatures';

interface CourseCurriculumBuilderProps {
  onUpgradeClick: () => void;
  hasUsedFreeTrial: boolean;
}

const CourseCurriculumBuilder: React.FC<CourseCurriculumBuilderProps> = ({ onUpgradeClick, hasUsedFreeTrial }) => {
  const [topic, setTopic] = useState('');
  const [isBuilding, setIsBuilding] = useState(false);
  const [curriculum, setCurriculum] = useState<CourseCurriculumBuilderType | null>(null);

  const handleBuild = async () => {
    if (!topic.trim()) return;
    
    if (hasUsedFreeTrial) {
      onUpgradeClick();
      return;
    }

    setIsBuilding(true);
    try {
      const result = await buildCourseCurriculum(topic);
      setCurriculum(result);
    } catch (error) {
      console.error('Error building course curriculum:', error);
    } finally {
      setIsBuilding(false);
    }
  };

  const handleCopy = (text: string) => {
    navigator.clipboard.writeText(text);
  };

  const handleDownload = () => {
    if (!curriculum) return;

    let content = `
COURSE CURRICULUM: ${curriculum.courseDetails.title}
=================================================
Generated: ${new Date().toLocaleDateString()}

COURSE DETAILS
-------------
Title: ${curriculum.courseDetails.title}
Subtitle: ${curriculum.courseDetails.subtitle}
Positioning: ${curriculum.courseDetails.positioning}
Audience Level: ${curriculum.courseDetails.audienceLevel}

CURRICULUM
---------
`;

    curriculum.curriculum.forEach(module => {
      content += `
MODULE ${module.moduleNumber}: ${module.moduleTitle}
${'-'.repeat(module.moduleTitle.length + 10)}
CTA: ${module.cta}

Lessons:
`;
      
      module.lessons.forEach(lesson => {
        content += `
  LESSON ${lesson.lessonNumber}: ${lesson.lessonTitle}
  Goals: ${lesson.goals.join(', ')}
  Activities: ${lesson.activities.join(', ')}
  Quiz Prompts: ${lesson.quizPrompts.join(', ')}
`;
      });
    });

    content += `
BONUS UNITS
----------
Slide Prompts: ${curriculum.bonusUnits.slidePrompts.join(', ')}
Video Segments: ${curriculum.bonusUnits.videoSegments.join(', ')}
Funnel Layout: ${curriculum.bonusUnits.funnelLayout}
eBook Draft: ${curriculum.bonusUnits.ebookDraft}

---
Generated by AdRocket AI
    `;

    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `course-curriculum-${topic.replace(/\s+/g, '-').toLowerCase()}-${Date.now()}.txt`;
    a.click();
    URL.revokeObjectURL(url);
  };

  return (
    <section className="px-6 py-12">
      <div className="max-w-6xl mx-auto">
        <div className="text-center mb-8">
          <h2 className="text-3xl font-bold text-white mb-4">
            Full AI Course Curriculum Builder
          </h2>
          <p className="text-gray-400">
            Transform your expertise into a complete $997 course curriculum
          </p>
        </div>

        {!curriculum ? (
          <div className="max-w-2xl mx-auto">
            <div className="bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-8">
              <div>
                <label className="text-white font-medium mb-2 block">Course Topic</label>
                <input
                  type="text"
                  value={topic}
                  onChange={(e) => setTopic(e.target.value)}
                  placeholder="e.g., social media marketing, fitness for beginners, personal finance..."
                  className="w-full bg-gray-900/50 border border-gray-600 rounded-lg px-4 py-3 text-white 
                           placeholder-gray-400 focus:border-yellow-400 focus:outline-none"
                />
              </div>
              
              <button
                onClick={handleBuild}
                disabled={isBuilding || !topic.trim()}
                className="w-full mt-6 px-6 py-4 bg-gradient-to-r from-yellow-400 to-amber-500 text-black 
                         font-bold rounded-lg hover:from-yellow-300 hover:to-amber-400 transition-all duration-300 
                         shadow-lg shadow-yellow-400/25 hover:shadow-yellow-400/40 disabled:opacity-50 
                         disabled:cursor-not-allowed flex items-center justify-center space-x-2"
              >
                {isBuilding ? (
                  <>
                    <Loader2 className="w-5 h-5 animate-spin" />
                    <span>Building Curriculum...</span>
                  </>
                ) : hasUsedFreeTrial ? (
                  <>
                    <Lock className="w-5 h-5" />
                    <span>Unlock Curriculum Builder - $9.99/mo</span>
                  </>
                ) : (
                  <>
                    <GraduationCap className="w-5 h-5" />
                    <span>Build Complete Curriculum</span>
                  </>
                )}
              </button>
              
              {!hasUsedFreeTrial && (
                <p className="text-center text-gray-400 text-sm mt-3">
                  âœ¨ Free trial â€¢ No credit card required
                </p>
              )}
            </div>
          </div>
        ) : (
          <div className="space-y-8 animate-fade-in">
            {/* Header with Download */}
            <div className="text-center bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-6">
              <h3 className="text-2xl font-bold text-white mb-4">
                ðŸŽ“ {curriculum.courseDetails.title}
              </h3>
              <p className="text-gray-400 mb-4">{curriculum.courseDetails.subtitle}</p>
              <button
                onClick={handleDownload}
                className="px-6 py-3 bg-gradient-to-r from-yellow-400 to-amber-500 text-black font-semibold 
                         rounded-lg hover:from-yellow-300 hover:to-amber-400 transition-all duration-300 
                         flex items-center space-x-2 mx-auto"
              >
                <Download className="w-4 h-4" />
                <span>Download Complete Curriculum</span>
              </button>
            </div>

            {/* Course Details */}
            <div className="bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-6">
              <h4 className="text-yellow-400 font-bold text-lg mb-4">ðŸ“‹ Course Details</h4>
              <div className="grid md:grid-cols-2 gap-6">
                <div className="bg-gray-900/50 rounded-lg p-4">
                  <h5 className="text-white font-semibold mb-2">Positioning</h5>
                  <p className="text-gray-300 text-sm">{curriculum.courseDetails.positioning}</p>
                </div>
                <div className="bg-gray-900/50 rounded-lg p-4">
                  <h5 className="text-white font-semibold mb-2">Audience Level</h5>
                  <p className="text-gray-300 text-sm">{curriculum.courseDetails.audienceLevel}</p>
                </div>
              </div>
            </div>

            {/* Curriculum Modules */}
            <div className="space-y-6">
              <h4 className="text-yellow-400 font-bold text-lg">ðŸ“š Curriculum</h4>
              {curriculum.curriculum.map((module) => (
                <div key={module.moduleNumber} className="bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-6">
                  <div className="flex justify-between items-start mb-4">
                    <div className="flex items-center space-x-3">
                      <div className="bg-yellow-400 text-black rounded-full w-8 h-8 flex items-center justify-center font-bold">
                        {module.moduleNumber}
                      </div>
                      <h5 className="text-white font-bold text-lg">{module.moduleTitle}</h5>
                    </div>
                    <button
                      onClick={() => handleCopy(`Module ${module.moduleNumber}: ${module.moduleTitle}\n\nCTA: ${module.cta}`)}
                      className="p-2 text-gray-400 hover:text-white transition-colors"
                    >
                      <Copy className="w-4 h-4" />
                    </button>
                  </div>

                  <div className="space-y-4 mb-4">
                    {module.lessons.map((lesson) => (
                      <div key={lesson.lessonNumber} className="bg-gray-900/50 rounded-lg p-4">
                        <h6 className="text-blue-400 font-semibold mb-2">Lesson {lesson.lessonNumber}: {lesson.lessonTitle}</h6>
                        <div className="grid md:grid-cols-3 gap-4">
                          <div>
                            <p className="text-gray-400 text-xs mb-1">Goals</p>
                            <ul className="text-gray-300 text-sm space-y-1">
                              {lesson.goals.map((goal, index) => (
                                <li key={index}>â€¢ {goal}</li>
                              ))}
                            </ul>
                          </div>
                          <div>
                            <p className="text-gray-400 text-xs mb-1">Activities</p>
                            <ul className="text-gray-300 text-sm space-y-1">
                              {lesson.activities.map((activity, index) => (
                                <li key={index}>â€¢ {activity}</li>
                              ))}
                            </ul>
                          </div>
                          <div>
                            <p className="text-gray-400 text-xs mb-1">Quiz Prompts</p>
                            <ul className="text-gray-300 text-sm space-y-1">
                              {lesson.quizPrompts.map((quiz, index) => (
                                <li key={index}>â€¢ {quiz}</li>
                              ))}
                            </ul>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>

                  <div className="bg-green-500/10 border border-green-500/20 rounded-lg p-3">
                    <div className="flex items-center space-x-2 mb-1">
                      <h6 className="text-green-400 font-semibold">Module CTA</h6>
                    </div>
                    <p className="text-gray-300 text-sm">{module.cta}</p>
                  </div>
                </div>
              ))}
            </div>

            {/* Bonus Units */}
            <div className="grid md:grid-cols-2 gap-6">
              <div className="bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-6">
                <div className="flex items-center space-x-3 mb-4">
                  <BookOpen className="w-6 h-6 text-purple-400" />
                  <h4 className="text-purple-400 font-bold text-lg">Bonus Units</h4>
                </div>
                <div className="space-y-4">
                  <div>
                    <h5 className="text-white font-semibold mb-2">Slide Prompts</h5>
                    <ul className="text-gray-300 text-sm space-y-1">
                      {curriculum.bonusUnits.slidePrompts.map((prompt, index) => (
                        <li key={index}>â€¢ {prompt}</li>
                      ))}
                    </ul>
                  </div>
                  <div>
                    <h5 className="text-white font-semibold mb-2">Video Segments</h5>
                    <ul className="text-gray-300 text-sm space-y-1">
                      {curriculum.bonusUnits.videoSegments.map((segment, index) => (
                        <li key={index}>â€¢ {segment}</li>
                      ))}
                    </ul>
                  </div>
                </div>
              </div>

              <div className="bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-6">
                <div className="flex items-center space-x-3 mb-4">
                  <FileText className="w-6 h-6 text-blue-400" />
                  <h4 className="text-blue-400 font-bold text-lg">Monetization</h4>
                </div>
                <div className="space-y-4">
                  <div>
                    <h5 className="text-white font-semibold mb-2">Funnel Layout</h5>
                    <div className="bg-blue-500/10 border border-blue-500/20 rounded-lg p-3">
                      <p className="text-gray-300 text-sm">{curriculum.bonusUnits.funnelLayout}</p>
                    </div>
                  </div>
                  <div>
                    <h5 className="text-white font-semibold mb-2">eBook Draft</h5>
                    <div className="bg-blue-500/10 border border-blue-500/20 rounded-lg p-3">
                      <p className="text-gray-300 text-sm">{curriculum.bonusUnits.ebookDraft}</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* Launch Strategy */}
            <div className="bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-6">
              <h4 className="text-yellow-400 font-bold text-lg mb-4">ðŸš€ Course Launch Strategy</h4>
              <div className="grid md:grid-cols-3 gap-6">
                <div>
                  <h5 className="text-white font-semibold mb-3">Pre-Launch</h5>
                  <ul className="text-gray-300 text-sm space-y-2">
                    <li>â€¢ Create 5 teaser videos from modules</li>
                    <li>â€¢ Build email list with lead magnet</li>
                    <li>â€¢ Set up course platform and payment</li>
                    <li>â€¢ Create sales page with testimonials</li>
                    <li>â€¢ Prepare launch email sequence</li>
                  </ul>
                </div>
                <div>
                  <h5 className="text-white font-semibold mb-3">Launch Week</h5>
                  <ul className="text-gray-300 text-sm space-y-2">
                    <li>â€¢ Day 1-3: Free workshop or challenge</li>
                    <li>â€¢ Day 4: Open cart with early-bird pricing</li>
                    <li>â€¢ Day 5-6: Share success stories</li>
                    <li>â€¢ Day 7: Close cart with final CTA</li>
                    <li>â€¢ Throughout: Answer questions live</li>
                  </ul>
                </div>
                <div>
                  <h5 className="text-white font-semibold mb-3">Post-Launch</h5>
                  <ul className="text-gray-300 text-sm space-y-2">
                    <li>â€¢ Collect feedback from first students</li>
                    <li>â€¢ Create case studies from results</li>
                    <li>â€¢ Set up evergreen funnel</li>
                    <li>â€¢ Plan next launch with improvements</li>
                    <li>â€¢ Create upsell opportunities</li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </section>
  );
};

export default CourseCurriculumBuilder;